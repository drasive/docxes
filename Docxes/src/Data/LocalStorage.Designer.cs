//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("LocalStorage", "LehrerFach", "Lehrer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VrankenBischof.Docxes.src.Data.Lehrer), "Fach", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Fach), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "LehrerSchule", "Lehrer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Lehrer), "Schule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VrankenBischof.Docxes.src.Data.Schule), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "FachUnterlage", "Fach", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VrankenBischof.Docxes.src.Data.Fach), "Unterlage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Unterlage), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "FachNote", "Fach", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VrankenBischof.Docxes.src.Data.Fach), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Note), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "FachEreignis", "Fach", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VrankenBischof.Docxes.src.Data.Fach), "Ereignis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Ereignis), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "EreignisNote", "Ereignis", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VrankenBischof.Docxes.src.Data.Ereignis), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Note), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "EreignisUnterlage", "Ereignis", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VrankenBischof.Docxes.src.Data.Ereignis), "Unterlage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Unterlage), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "EreignisNotiz", "Ereignis", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VrankenBischof.Docxes.src.Data.Ereignis), "Notiz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Notiz), true)]
[assembly: EdmRelationshipAttribute("LocalStorage", "FachNotiz", "Fach", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VrankenBischof.Docxes.src.Data.Fach), "Notiz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VrankenBischof.Docxes.src.Data.Notiz), true)]

#endregion

namespace VrankenBischof.Docxes.src.Data
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class LocalStorageContainer : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues LocalStorageContainer-Objekt mithilfe der in Abschnitt 'LocalStorageContainer' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public LocalStorageContainer() : base("name=LocalStorageContainer", "LocalStorageContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues LocalStorageContainer-Objekt.
        /// </summary>
        public LocalStorageContainer(string connectionString) : base(connectionString, "LocalStorageContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues LocalStorageContainer-Objekt.
        /// </summary>
        public LocalStorageContainer(EntityConnection connection) : base(connection, "LocalStorageContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Fach> Fächer
        {
            get
            {
                if ((_Fächer == null))
                {
                    _Fächer = base.CreateObjectSet<Fach>("Fächer");
                }
                return _Fächer;
            }
        }
        private ObjectSet<Fach> _Fächer;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Note> Noten
        {
            get
            {
                if ((_Noten == null))
                {
                    _Noten = base.CreateObjectSet<Note>("Noten");
                }
                return _Noten;
            }
        }
        private ObjectSet<Note> _Noten;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Unterlage> Unterlagen
        {
            get
            {
                if ((_Unterlagen == null))
                {
                    _Unterlagen = base.CreateObjectSet<Unterlage>("Unterlagen");
                }
                return _Unterlagen;
            }
        }
        private ObjectSet<Unterlage> _Unterlagen;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Ereignis> Ereignisse
        {
            get
            {
                if ((_Ereignisse == null))
                {
                    _Ereignisse = base.CreateObjectSet<Ereignis>("Ereignisse");
                }
                return _Ereignisse;
            }
        }
        private ObjectSet<Ereignis> _Ereignisse;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Notiz> Notizen
        {
            get
            {
                if ((_Notizen == null))
                {
                    _Notizen = base.CreateObjectSet<Notiz>("Notizen");
                }
                return _Notizen;
            }
        }
        private ObjectSet<Notiz> _Notizen;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Schule> Schulen
        {
            get
            {
                if ((_Schulen == null))
                {
                    _Schulen = base.CreateObjectSet<Schule>("Schulen");
                }
                return _Schulen;
            }
        }
        private ObjectSet<Schule> _Schulen;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Lehrer> Lehrer
        {
            get
            {
                if ((_Lehrer == null))
                {
                    _Lehrer = base.CreateObjectSet<Lehrer>("Lehrer");
                }
                return _Lehrer;
            }
        }
        private ObjectSet<Lehrer> _Lehrer;

        #endregion

        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Fächer'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFächer(Fach fach)
        {
            base.AddObject("Fächer", fach);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Noten'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToNoten(Note note)
        {
            base.AddObject("Noten", note);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Unterlagen'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToUnterlagen(Unterlage unterlage)
        {
            base.AddObject("Unterlagen", unterlage);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Ereignisse'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToEreignisse(Ereignis ereignis)
        {
            base.AddObject("Ereignisse", ereignis);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Notizen'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToNotizen(Notiz notiz)
        {
            base.AddObject("Notizen", notiz);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Schulen'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToSchulen(Schule schule)
        {
            base.AddObject("Schulen", schule);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Lehrer'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToLehrer(Lehrer lehrer)
        {
            base.AddObject("Lehrer", lehrer);
        }

        #endregion

    }

    #endregion

    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Ereignis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ereignis : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Ereignis-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="fachId">Anfangswert der Eigenschaft FachId.</param>
        /// <param name="datum">Anfangswert der Eigenschaft Datum.</param>
        /// <param name="typ">Anfangswert der Eigenschaft Typ.</param>
        public static Ereignis CreateEreignis(global::System.Int32 id, global::System.Int32 fachId, global::System.DateTime datum, global::System.Int32 typ)
        {
            Ereignis ereignis = new Ereignis();
            ereignis.Id = id;
            ereignis.FachId = fachId;
            ereignis.Datum = datum;
            ereignis.Typ = typ;
            return ereignis;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FachId
        {
            get
            {
                return _FachId;
            }
            set
            {
                OnFachIdChanging(value);
                ReportPropertyChanging("FachId");
                _FachId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FachId");
                OnFachIdChanged();
            }
        }
        private global::System.Int32 _FachId;
        partial void OnFachIdChanging(global::System.Int32 value);
        partial void OnFachIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Datum
        {
            get
            {
                return _Datum;
            }
            set
            {
                OnDatumChanging(value);
                ReportPropertyChanging("Datum");
                _Datum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Datum");
                OnDatumChanged();
            }
        }
        private global::System.DateTime _Datum;
        partial void OnDatumChanging(global::System.DateTime value);
        partial void OnDatumChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Typ
        {
            get
            {
                return _Typ;
            }
            set
            {
                OnTypChanging(value);
                ReportPropertyChanging("Typ");
                _Typ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Typ");
                OnTypChanged();
            }
        }
        private global::System.Int32 _Typ;
        partial void OnTypChanging(global::System.Int32 value);
        partial void OnTypChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachEreignis", "Fach")]
        public Fach Fach
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachEreignis", "Fach").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachEreignis", "Fach").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fach> FachReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachEreignis", "Fach");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fach>("LocalStorage.FachEreignis", "Fach", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "EreignisNote", "Note")]
        public EntityCollection<Note> Note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("LocalStorage.EreignisNote", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("LocalStorage.EreignisNote", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "EreignisUnterlage", "Unterlage")]
        public EntityCollection<Unterlage> Unterlage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unterlage>("LocalStorage.EreignisUnterlage", "Unterlage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unterlage>("LocalStorage.EreignisUnterlage", "Unterlage", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "EreignisNotiz", "Notiz")]
        public EntityCollection<Notiz> Notiz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notiz>("LocalStorage.EreignisNotiz", "Notiz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notiz>("LocalStorage.EreignisNotiz", "Notiz", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Fach")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fach : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Fach-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        /// <param name="lehrerId">Anfangswert der Eigenschaft LehrerId.</param>
        public static Fach CreateFach(global::System.Int32 id, global::System.String name, global::System.Int32 lehrerId)
        {
            Fach fach = new Fach();
            fach.Id = id;
            fach.Name = name;
            fach.LehrerId = lehrerId;
            return fach;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kommentar
        {
            get
            {
                return _Kommentar;
            }
            set
            {
                OnKommentarChanging(value);
                ReportPropertyChanging("Kommentar");
                _Kommentar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kommentar");
                OnKommentarChanged();
            }
        }
        private global::System.String _Kommentar;
        partial void OnKommentarChanging(global::System.String value);
        partial void OnKommentarChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LehrerId
        {
            get
            {
                return _LehrerId;
            }
            set
            {
                OnLehrerIdChanging(value);
                ReportPropertyChanging("LehrerId");
                _LehrerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LehrerId");
                OnLehrerIdChanged();
            }
        }
        private global::System.Int32 _LehrerId;
        partial void OnLehrerIdChanging(global::System.Int32 value);
        partial void OnLehrerIdChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "LehrerFach", "Lehrer")]
        public Lehrer Lehrer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lehrer>("LocalStorage.LehrerFach", "Lehrer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lehrer>("LocalStorage.LehrerFach", "Lehrer").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lehrer> LehrerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lehrer>("LocalStorage.LehrerFach", "Lehrer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lehrer>("LocalStorage.LehrerFach", "Lehrer", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachUnterlage", "Unterlage")]
        public EntityCollection<Unterlage> Unterlage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unterlage>("LocalStorage.FachUnterlage", "Unterlage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unterlage>("LocalStorage.FachUnterlage", "Unterlage", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachNote", "Note")]
        public EntityCollection<Note> Note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("LocalStorage.FachNote", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("LocalStorage.FachNote", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachEreignis", "Ereignis")]
        public EntityCollection<Ereignis> Ereignis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ereignis>("LocalStorage.FachEreignis", "Ereignis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ereignis>("LocalStorage.FachEreignis", "Ereignis", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachNotiz", "Notiz")]
        public EntityCollection<Notiz> Notiz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notiz>("LocalStorage.FachNotiz", "Notiz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notiz>("LocalStorage.FachNotiz", "Notiz", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Lehrer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lehrer : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Lehrer-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="schuleId">Anfangswert der Eigenschaft SchuleId.</param>
        /// <param name="nachname">Anfangswert der Eigenschaft Nachname.</param>
        /// <param name="männlich">Anfangswert der Eigenschaft Männlich.</param>
        public static Lehrer CreateLehrer(global::System.Int32 id, global::System.Int32 schuleId, global::System.String nachname, global::System.Boolean männlich)
        {
            Lehrer lehrer = new Lehrer();
            lehrer.Id = id;
            lehrer.SchuleId = schuleId;
            lehrer.Nachname = nachname;
            lehrer.Männlich = männlich;
            return lehrer;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchuleId
        {
            get
            {
                return _SchuleId;
            }
            set
            {
                OnSchuleIdChanging(value);
                ReportPropertyChanging("SchuleId");
                _SchuleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchuleId");
                OnSchuleIdChanged();
            }
        }
        private global::System.Int32 _SchuleId;
        partial void OnSchuleIdChanging(global::System.Int32 value);
        partial void OnSchuleIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Vorname
        {
            get
            {
                return _Vorname;
            }
            set
            {
                OnVornameChanging(value);
                ReportPropertyChanging("Vorname");
                _Vorname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Vorname");
                OnVornameChanged();
            }
        }
        private global::System.String _Vorname;
        partial void OnVornameChanging(global::System.String value);
        partial void OnVornameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nachname
        {
            get
            {
                return _Nachname;
            }
            set
            {
                OnNachnameChanging(value);
                ReportPropertyChanging("Nachname");
                _Nachname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nachname");
                OnNachnameChanged();
            }
        }
        private global::System.String _Nachname;
        partial void OnNachnameChanging(global::System.String value);
        partial void OnNachnameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Männlich
        {
            get
            {
                return _Männlich;
            }
            set
            {
                OnMännlichChanging(value);
                ReportPropertyChanging("Männlich");
                _Männlich = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Männlich");
                OnMännlichChanged();
            }
        }
        private global::System.Boolean _Männlich;
        partial void OnMännlichChanging(global::System.Boolean value);
        partial void OnMännlichChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "LehrerFach", "Fach")]
        public EntityCollection<Fach> Fach
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fach>("LocalStorage.LehrerFach", "Fach");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fach>("LocalStorage.LehrerFach", "Fach", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "LehrerSchule", "Schule")]
        public Schule Schule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schule>("LocalStorage.LehrerSchule", "Schule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schule>("LocalStorage.LehrerSchule", "Schule").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Schule> SchuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schule>("LocalStorage.LehrerSchule", "Schule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Schule>("LocalStorage.LehrerSchule", "Schule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Note-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="wert">Anfangswert der Eigenschaft Wert.</param>
        /// <param name="gewicht">Anfangswert der Eigenschaft Gewicht.</param>
        /// <param name="fachId">Anfangswert der Eigenschaft FachId.</param>
        public static Note CreateNote(global::System.Int32 id, global::System.Int32 wert, global::System.Int32 gewicht, global::System.Int32 fachId)
        {
            Note note = new Note();
            note.Id = id;
            note.Wert = wert;
            note.Gewicht = gewicht;
            note.FachId = fachId;
            return note;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            private set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Wert
        {
            get
            {
                return _Wert;
            }
            set
            {
                OnWertChanging(value);
                ReportPropertyChanging("Wert");
                _Wert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wert");
                OnWertChanged();
            }
        }
        private global::System.Int32 _Wert;
        partial void OnWertChanging(global::System.Int32 value);
        partial void OnWertChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gewicht
        {
            get
            {
                return _Gewicht;
            }
            set
            {
                OnGewichtChanging(value);
                ReportPropertyChanging("Gewicht");
                _Gewicht = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gewicht");
                OnGewichtChanged();
            }
        }
        private global::System.Int32 _Gewicht;
        partial void OnGewichtChanging(global::System.Int32 value);
        partial void OnGewichtChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kommentar
        {
            get
            {
                return _Kommentar;
            }
            set
            {
                OnKommentarChanging(value);
                ReportPropertyChanging("Kommentar");
                _Kommentar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kommentar");
                OnKommentarChanged();
            }
        }
        private global::System.String _Kommentar;
        partial void OnKommentarChanging(global::System.String value);
        partial void OnKommentarChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FachId
        {
            get
            {
                return _FachId;
            }
            set
            {
                OnFachIdChanging(value);
                ReportPropertyChanging("FachId");
                _FachId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FachId");
                OnFachIdChanged();
            }
        }
        private global::System.Int32 _FachId;
        partial void OnFachIdChanging(global::System.Int32 value);
        partial void OnFachIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EreignisId
        {
            get
            {
                return _EreignisId;
            }
            set
            {
                OnEreignisIdChanging(value);
                ReportPropertyChanging("EreignisId");
                _EreignisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EreignisId");
                OnEreignisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EreignisId;
        partial void OnEreignisIdChanging(Nullable<global::System.Int32> value);
        partial void OnEreignisIdChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachNote", "Fach")]
        public Fach Fach
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachNote", "Fach").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachNote", "Fach").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fach> FachReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachNote", "Fach");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fach>("LocalStorage.FachNote", "Fach", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "EreignisNote", "Ereignis")]
        public Ereignis Ereignis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisNote", "Ereignis").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisNote", "Ereignis").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ereignis> EreignisReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisNote", "Ereignis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ereignis>("LocalStorage.EreignisNote", "Ereignis", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Notiz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notiz : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Notiz-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="inhalt">Anfangswert der Eigenschaft Inhalt.</param>
        /// <param name="fachId">Anfangswert der Eigenschaft FachId.</param>
        public static Notiz CreateNotiz(global::System.Int32 id, global::System.String inhalt, global::System.Int32 fachId)
        {
            Notiz notiz = new Notiz();
            notiz.Id = id;
            notiz.Inhalt = inhalt;
            notiz.FachId = fachId;
            return notiz;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Inhalt
        {
            get
            {
                return _Inhalt;
            }
            set
            {
                OnInhaltChanging(value);
                ReportPropertyChanging("Inhalt");
                _Inhalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Inhalt");
                OnInhaltChanged();
            }
        }
        private global::System.String _Inhalt;
        partial void OnInhaltChanging(global::System.String value);
        partial void OnInhaltChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EreignisId
        {
            get
            {
                return _EreignisId;
            }
            set
            {
                OnEreignisIdChanging(value);
                ReportPropertyChanging("EreignisId");
                _EreignisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EreignisId");
                OnEreignisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EreignisId;
        partial void OnEreignisIdChanging(Nullable<global::System.Int32> value);
        partial void OnEreignisIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FachId
        {
            get
            {
                return _FachId;
            }
            set
            {
                OnFachIdChanging(value);
                ReportPropertyChanging("FachId");
                _FachId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FachId");
                OnFachIdChanged();
            }
        }
        private global::System.Int32 _FachId;
        partial void OnFachIdChanging(global::System.Int32 value);
        partial void OnFachIdChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "EreignisNotiz", "Ereignis")]
        public Ereignis Ereignis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisNotiz", "Ereignis").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisNotiz", "Ereignis").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ereignis> EreignisReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisNotiz", "Ereignis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ereignis>("LocalStorage.EreignisNotiz", "Ereignis", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachNotiz", "Fach")]
        public Fach Fach
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachNotiz", "Fach").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachNotiz", "Fach").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fach> FachReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachNotiz", "Fach");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fach>("LocalStorage.FachNotiz", "Fach", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Schule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schule : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Schule-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static Schule CreateSchule(global::System.Int32 id, global::System.String name)
        {
            Schule schule = new Schule();
            schule.Id = id;
            schule.Name = name;
            return schule;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kommentar
        {
            get
            {
                return _Kommentar;
            }
            set
            {
                OnKommentarChanging(value);
                ReportPropertyChanging("Kommentar");
                _Kommentar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kommentar");
                OnKommentarChanged();
            }
        }
        private global::System.String _Kommentar;
        partial void OnKommentarChanging(global::System.String value);
        partial void OnKommentarChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "LehrerSchule", "Lehrer")]
        public EntityCollection<Lehrer> Lehrer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lehrer>("LocalStorage.LehrerSchule", "Lehrer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lehrer>("LocalStorage.LehrerSchule", "Lehrer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalStorage", Name="Unterlage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unterlage : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Unterlage-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="fachId">Anfangswert der Eigenschaft FachId.</param>
        /// <param name="inhalt">Anfangswert der Eigenschaft Inhalt.</param>
        public static Unterlage CreateUnterlage(global::System.Int32 id, global::System.Int32 fachId, global::System.Byte[] inhalt)
        {
            Unterlage unterlage = new Unterlage();
            unterlage.Id = id;
            unterlage.FachId = fachId;
            unterlage.Inhalt = inhalt;
            return unterlage;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FachId
        {
            get
            {
                return _FachId;
            }
            set
            {
                OnFachIdChanging(value);
                ReportPropertyChanging("FachId");
                _FachId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FachId");
                OnFachIdChanged();
            }
        }
        private global::System.Int32 _FachId;
        partial void OnFachIdChanging(global::System.Int32 value);
        partial void OnFachIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Inhalt
        {
            get
            {
                return StructuralObject.GetValidValue(_Inhalt);
            }
            set
            {
                OnInhaltChanging(value);
                ReportPropertyChanging("Inhalt");
                _Inhalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Inhalt");
                OnInhaltChanged();
            }
        }
        private global::System.Byte[] _Inhalt;
        partial void OnInhaltChanging(global::System.Byte[] value);
        partial void OnInhaltChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EreignisId
        {
            get
            {
                return _EreignisId;
            }
            set
            {
                OnEreignisIdChanging(value);
                ReportPropertyChanging("EreignisId");
                _EreignisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EreignisId");
                OnEreignisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EreignisId;
        partial void OnEreignisIdChanging(Nullable<global::System.Int32> value);
        partial void OnEreignisIdChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "FachUnterlage", "Fach")]
        public Fach Fach
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachUnterlage", "Fach").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachUnterlage", "Fach").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fach> FachReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fach>("LocalStorage.FachUnterlage", "Fach");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fach>("LocalStorage.FachUnterlage", "Fach", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalStorage", "EreignisUnterlage", "Ereignis")]
        public Ereignis Ereignis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisUnterlage", "Ereignis").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisUnterlage", "Ereignis").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ereignis> EreignisReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ereignis>("LocalStorage.EreignisUnterlage", "Ereignis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ereignis>("LocalStorage.EreignisUnterlage", "Ereignis", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
